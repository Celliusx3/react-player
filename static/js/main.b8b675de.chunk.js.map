{"version":3,"sources":["components/Appbar.js","screens/DetailsScreen.js","screens/SearchScreen.js","screens/HomeScreen.js","App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","theme","root","flexGrow","search","position","borderRadius","shape","backgroundColor","fade","palette","common","white","marginRight","spacing","marginLeft","width","breakpoints","up","searchIcon","padding","height","pointerEvents","display","alignItems","justifyContent","inputButton","inputRoot","color","inputInput","paddingLeft","transition","transitions","create","title","Appbar","onSearchButtonClicked","classes","React","useState","searchText","setSearchText","className","AppBar","Toolbar","Typography","variant","InputBase","placeholder","input","inputProps","onChange","event","target","value","Button","disableElevation","onClick","base","toolbar","mixins","paddingTop","paper","paddingBottom","textAlign","text","secondary","paperSelected","primary","main","background","default","DetailsScreen","id","useParams","history","useHistory","playPosition","setPlayPosition","list","setList","useEffect","length","fetch","then","response","json","result","plays","Object","keys","data","playUrl","map","key","reverse","error","console","log","push","style","alignSelf","top","left","transform","playing","url","controls","config","file","attributes","crossOrigin","Grid","container","index","item","xs","Paper","SearchScreen","vid","name","HomeScreen","App","basename","window","location","pathname","exact","path","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"yXASMA,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJC,SAAU,GAEZC,OAAO,aACLC,SAAU,WACVC,aAAcL,EAAMM,MAAMD,aAC1BE,gBAAiBC,YAAKR,EAAMS,QAAQC,OAAOC,MAAO,KAClD,UAAW,CACTJ,gBAAiBC,YAAKR,EAAMS,QAAQC,OAAOC,MAAO,MAEpDC,YAAaZ,EAAMa,QAAQ,GAC3BC,WAAY,EACZC,MAAO,QACNf,EAAMgB,YAAYC,GAAG,MAAQ,CAC5BH,WAAYd,EAAMa,QAAQ,GAC1BE,MAAO,SAGXG,WAAY,CACVC,QAASnB,EAAMa,QAAQ,EAAG,GAC1BO,OAAQ,OACRhB,SAAU,WACViB,cAAe,OACfC,QAAS,OACTC,WAAY,SACZC,eAAgB,UAElBC,YAAa,CACXN,QAASnB,EAAMa,QAAQ,EAAG,IAE5Ba,UAAW,CACTC,MAAO,WAETC,WAAW,aACTT,QAASnB,EAAMa,QAAQ,EAAG,EAAG,EAAG,GAEhCgB,YAAY,cAAD,OAAgB7B,EAAMa,QAAQ,GAA9B,OACXiB,WAAY9B,EAAM+B,YAAYC,OAAO,SACrCjB,MAAO,QACNf,EAAMgB,YAAYC,GAAG,MAAQ,CAC5BF,MAAO,SAGXkB,MAAM,aACJX,QAAS,QACRtB,EAAMgB,YAAYC,GAAG,MAAQ,CAC5BK,QAAS,cAKA,SAASY,EAAT,GAAiD,IAAhCD,EAA+B,EAA/BA,MAAOE,EAAwB,EAAxBA,sBAC/BC,EAAUtC,IAD6C,EAEzBuC,IAAMC,WAFmB,mBAEtDC,EAFsD,KAE1CC,EAF0C,KAK7D,OACE,yBAAKC,UAAWL,EAAQnC,MACtB,kBAACyC,EAAA,EAAD,CAAQtC,SAAS,UACf,kBAACuC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAYC,QAAQ,KAAKJ,UAAWL,EAAQH,OACzCA,GAEH,yBAAKQ,UAAWL,EAAQjC,QACtB,yBAAKsC,UAAWL,EAAQlB,YACtB,kBAAC,IAAD,OAEF,kBAAC4B,EAAA,EAAD,CACEC,YAAY,eACZX,QAAS,CACPnC,KAAMmC,EAAQV,UACdsB,MAAOZ,EAAQR,YAEjBqB,WAAY,CAAE,aAAc,UAC5BC,SAAU,SAAAC,GACRX,EAAcW,EAAMC,OAAOC,WAIjC,kBAACC,EAAA,EAAD,CAAQT,QAAQ,YAAYlB,MAAM,YAAY4B,kBAAgB,EAACC,QAAS,WAAKrB,EAAsBI,KAAnG,mB,YC7EJzC,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCyD,KAAM,CACJC,QAAS1D,EAAM2D,OAAOD,QACtBE,WAAY5D,EAAMa,QAAQ,IAE5BZ,KAAM,CACJkB,QAASnB,EAAMa,QAAQ,GACvBX,SAAU,GAEZ2D,MAAO,CACLD,WAAY5D,EAAMa,QAAQ,GAC1BiD,cAAe9D,EAAMa,QAAQ,GAC7BkD,UAAW,SACXpC,MAAO3B,EAAMS,QAAQuD,KAAKC,WAE5BC,cAAe,CACb3D,gBAAiBP,EAAMS,QAAQ0D,QAAQC,KACvCzC,MAAO3B,EAAMS,QAAQ4D,WAAWC,aAIrB,SAASC,IAAiB,IACjCC,EAAOC,cAAPD,GACFE,EAAUC,cAERvC,EAAUtC,IAJsB,EAKEwC,mBAAS,GALX,mBAK/BsC,EAL+B,KAKjBC,EALiB,OAMdvC,mBAAS,IANK,mBAM/BwC,EAN+B,KAMzBC,EANyB,OAOZzC,mBAAS,sBAPG,mBAO/BL,EAP+B,UAUtC+C,qBAAU,YACI,MAARF,GAAgBA,EAAKG,QAAU,IACjCC,MAAM,0EAAD,OAA2EV,IAC/EW,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MACC,SAACG,GACC,IAAMC,EAAQC,OAAOC,KAAKH,EAAOI,KAAKC,SAASC,KAAI,SAASC,GAC1D,MAAO,CACL,MAASA,EACT,IAAQP,EAAOI,KAAKC,QAAQE,OAE7BC,UAEHf,EAAQQ,MAKV,SAACQ,GACCC,QAAQC,IAAIF,SA+CpB,OACE,6BACE,kBAAC7D,EAAD,CAAQD,MAAQA,EAAOE,sBAAyB,SAAC6B,GAAUU,EAAQwB,KAAR,kBAAwBlC,OACnF,yBAAKvB,UAAWL,EAAQqB,MA1CxB,yBAAKhB,UAAU,iBAAiB0D,MAAQ,CAACpF,MAAO,MAAOX,SAAU,WAAYwD,WAAW,QAASwC,UAAU,WACzG,kBAAC,IAAD,CACED,MAAQ,CAAC/F,SAAU,WAAYiG,IAAK,EACnCC,KAAM,MACLC,UAAW,sBACb9D,UAAU,eACV+D,SAAO,EACPC,IAA4B,MAAvB3B,EAAKF,GAAwB,GAAIE,EAAKF,GAAc6B,IACzDC,UAAQ,EACR3F,MAAM,OACNK,OAAO,OACPuF,OAAQ,CAAEC,KAAM,CACdC,WAAY,CACVC,YAAa,aAUrB,yBAAKrE,UAAWL,EAAQnC,MACtB,kBAAC8G,EAAA,EAAD,CAAMC,WAAS,EAACnG,QAAS,GACd,MAAPiE,EAAcA,EAAKc,KAAI,SAACvC,EAAM4D,GAC9B,OACE,kBAACF,EAAA,EAAD,CAAMlB,IAAKxC,EAAMpB,MAAOiF,MAAI,EAACC,GAAI,GAC/B,kBAACC,EAAA,EAAD,CAAO5D,QAAS,kBAAMqB,EAAgBoC,IAASpE,QAAQ,WAAWJ,UAAS,UAAKL,EAAQyB,MAAb,YAAsBe,GAAgBqC,EAAQ7E,EAAQ8B,cAAe,OAC7Ib,EAAMpB,WAIX,kC,YC5FRnC,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCyD,KAAM,CACJC,QAAS1D,EAAM2D,OAAOD,QACtBE,WAAY5D,EAAMa,QAAQ,IAE5BZ,KAAM,CACJkB,QAASnB,EAAMa,QAAQ,GACvBX,SAAU,GAEZ2D,MAAO,CACLD,WAAY5D,EAAMa,QAAQ,GAC1BiD,cAAe9D,EAAMa,QAAQ,GAC7BkD,UAAW,SACXpC,MAAO3B,EAAMS,QAAQuD,KAAKC,WAE5BC,cAAe,CACb3D,gBAAiBP,EAAMS,QAAQ0D,QAAQC,KACvCzC,MAAO3B,EAAMS,QAAQ4D,WAAWC,aAIrB,SAAS+C,IAAgB,IAEhC7C,EAAOC,cAAPD,GACFE,EAAUC,cAGRvC,EAAUtC,IANqB,EAObwC,mBAAS,IAPI,mBAO9BwC,EAP8B,KAOxBC,EAPwB,OAQXzC,mBAAS,sBARE,mBAQ9BL,EAR8B,UAWrC+C,qBAAU,YACI,MAARF,GAAgBA,EAAKG,QAAU,IACjCC,MAAM,qEAAD,OAAsEV,EAAtE,wBACJW,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MACC,SAACG,GACCU,QAAQC,IAAIX,GACZP,EAAQO,EAAOI,KAAKA,SAKtB,SAACK,GACCC,QAAQC,IAAIF,SAwBpB,OACE,6BACE,kBAAC7D,EAAD,CAAQD,MAAQA,EAAOE,sBAAyB,SAAC6B,GAAUU,EAAQwB,KAAR,kBAAwBlC,OACnF,yBAAKvB,UAAWL,EAAQqB,MAnBxB,yBAAKhB,UAAWL,EAAQnC,MACtB,kBAAC8G,EAAA,EAAD,CAAMC,WAAS,EAACnG,QAAS,GACd,MAAPiE,EAAcA,EAAKc,KAAI,SAACvC,EAAM4D,GAC9B,OACE,kBAACF,EAAA,EAAD,CAAMlB,IAAKxC,EAAMiE,IAAKJ,MAAI,EAACC,GAAI,GAC7B,kBAACC,EAAA,EAAD,CAAO5D,QAAS,WAAQkB,EAAQwB,KAAR,mBAAyB7C,EAAMiE,OAASzE,QAAQ,WAAWJ,UAAS,UAAKL,EAAQyB,QACtGR,EAAMkE,UAIX,kCClEd,IAAMzH,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCyD,KAAM,CACJC,QAAS1D,EAAM2D,OAAOD,QACtBvC,QAASnB,EAAMa,QAAQ,IAEzBZ,KAAM,CACJkB,QAASnB,EAAMa,QAAQ,GACvBX,SAAU,GAEZ2D,MAAO,CACLD,WAAY5D,EAAMa,QAAQ,GAC1BiD,cAAe9D,EAAMa,QAAQ,GAC7BkD,UAAW,SACXpC,MAAO3B,EAAMS,QAAQuD,KAAKC,WAE5BC,cAAe,CACb3D,gBAAiBP,EAAMS,QAAQ0D,QAAQC,KACvCzC,MAAO3B,EAAMS,QAAQ4D,WAAWC,aAIrB,SAASkD,IAEtB,IAAI9C,EAAUC,cAERvC,EAAUtC,IAJmB,EAKXwC,mBAAS,IALE,gCAMTA,mBAAS,uBANA,mBAM5BL,EAN4B,UAQnC,OACE,6BACE,kBAACC,EAAD,CAAQD,MAAQA,EAAOE,sBAAyB,SAAC6B,GAAUU,EAAQwB,KAAR,kBAAwBlC,OACnF,yBAAKvB,UAAWL,EAAQqB,MACpB,kBAAC2D,EAAA,EAAD,CAAOvE,QAAQ,WAAWJ,UAAS,UAAKL,EAAQyB,QAC9C,kBAACjB,EAAA,EAAD,CAAYC,QAAQ,MACjB,uDCZA4E,MAlBf,WACE,OACE,kBAAC,IAAD,CAAQC,SAAUC,OAAOC,SAASC,UAAY,IAC5C,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,KAChB,kBAACP,EAAD,OAEF,kBAAC,IAAD,CAAOO,KAAK,eACV,kBAACV,EAAD,OAEF,kBAAC,IAAD,CAAOU,KAAK,gBACV,kBAACxD,EAAD,UCZUyD,QACW,cAA7BL,OAAOC,SAASK,UAEe,UAA7BN,OAAOC,SAASK,UAEhBN,OAAOC,SAASK,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBvD,MAAK,SAAAwD,GACJA,EAAaC,gBAEdC,OAAM,SAAA9C,GACLC,QAAQD,MAAMA,EAAM+C,c","file":"static/js/main.b8b675de.chunk.js","sourcesContent":["import React from 'react';\nimport { fade, makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport InputBase from '@material-ui/core/InputBase';\nimport SearchIcon from '@material-ui/icons/Search';\nimport Button from '@material-ui/core/Button';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  search: {\n    position: 'relative',\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: fade(theme.palette.common.white, 0.15),\n    '&:hover': {\n      backgroundColor: fade(theme.palette.common.white, 0.25),\n    },\n    marginRight: theme.spacing(2),\n    marginLeft: 0,\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n      marginLeft: theme.spacing(3),\n      width: 'auto',\n    },\n  },\n  searchIcon: {\n    padding: theme.spacing(0, 2),\n    height: '100%',\n    position: 'absolute',\n    pointerEvents: 'none',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  inputButton: {\n    padding: theme.spacing(0, 2),\n  },\n  inputRoot: {\n    color: 'inherit',\n  },\n  inputInput: {\n    padding: theme.spacing(1, 1, 1, 0),\n    // vertical padding + font size from searchIcon\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n    transition: theme.transitions.create('width'),\n    width: '100%',\n    [theme.breakpoints.up('md')]: {\n      width: '20ch',\n    },\n  },\n  title: {\n    display: 'none',\n    [theme.breakpoints.up('sm')]: {\n      display: 'block',\n    },\n  },\n}));\n\nexport default function Appbar({title, onSearchButtonClicked}) {\n  const classes = useStyles();\n  const [searchText, setSearchText] = React.useState()\n\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <Typography variant=\"h6\" className={classes.title}>\n            {title}\n          </Typography>\n          <div className={classes.search}>\n            <div className={classes.searchIcon}>\n              <SearchIcon />\n            </div>\n            <InputBase\n              placeholder=\"搜索\"\n              classes={{\n                root: classes.inputRoot,\n                input: classes.inputInput,\n              }}\n              inputProps={{ 'aria-label': 'search' }}\n              onChange={event=>{\n                setSearchText(event.target.value)\n              }}\n            />\n          </div>\n          <Button variant=\"contained\" color=\"secondary\" disableElevation onClick={()=>{onSearchButtonClicked(searchText)}}>\n            搜索\n          </Button>\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n}\n","import React, {useState, useEffect} from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport ReactPlayer from 'react-player';\nimport Appbar from '../components/Appbar';\nimport {\n  useHistory,\n  useParams\n} from \"react-router-dom\";\n\n\nconst useStyles = makeStyles((theme) => ({\n  base: {\n    toolbar: theme.mixins.toolbar,\n    paddingTop: theme.spacing(2)\n  },\n  root: {\n    padding: theme.spacing(2),\n    flexGrow: 1,\n  },\n  paper: {\n    paddingTop: theme.spacing(2),\n    paddingBottom: theme.spacing(2),\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n  },\n  paperSelected: {\n    backgroundColor: theme.palette.primary.main,\n    color: theme.palette.background.default\n  }\n}));\n\nexport default function DetailsScreen() {\n  let { id } = useParams();\n  let history = useHistory();\n\n  const classes = useStyles();\n  const [playPosition, setPlayPosition] = useState(0);\n  const [list, setList] = useState([]);\n  const [title, setTitle] = useState(\"看戏吧\");\n\n\n  useEffect(() => {\n    if (list == null || list.length <= 0) {\n      fetch(`https://api.eyunzhu.com/api/vatfs/resource_site_collect/getVDetail?vid=${id}`)\n      .then(response => response.json())\n      .then(\n        (result) => {\n          const plays = Object.keys(result.data.playUrl).map(function(key) {\n            return {\n              \"title\": key,\n              \"url\":  result.data.playUrl[key]\n            }\n          }).reverse()\n\n          setList(plays)\n        },\n        // Note: it's important to handle errors here\n        // instead of a catch() block so that we don't swallow\n        // exceptions from actual bugs in components.\n        (error) => {\n          console.log(error)\n        }\n      )\n    }\n  });\n\n  const renderPlayer = () => {\n    return (\n      <div className='player-wrapper' style= {{width: \"75%\", position: \"relative\", paddingTop:\"37.5%\", alignSelf:\"center\"}}>\n        <ReactPlayer\n          style= {{position: \"absolute\", top: 0,\n           left: \"50%\", /* position the left edge of the element at the middle of the parent */\n            transform: \"translateX(-32.5%)\"}}\n          className='react-player'\n          playing\n          url={list[playPosition]  == null ?\"\": list[playPosition].url }\n          controls\n          width='100%'\n          height='100%'\n          config={{ file: {\n            attributes: {\n              crossOrigin: 'true'\n            }\n          }}}      \n        />\n      </div>\n    )\n  }\n\n  const renderList = () =>  {\n    return (\n      <div className={classes.root}>\n        <Grid container spacing={1}>\n          { list!= null ? list.map((value,index) => {\n            return (\n              <Grid key={value.title} item xs={1}>\n                <Paper onClick={() => setPlayPosition(index) } variant=\"outlined\" className={`${classes.paper} ${playPosition == index ? classes.paperSelected: null}`}>\n                  {value.title}\n                </Paper>\n              </Grid>\n            )\n          }): <div></div>}\n        </Grid>\n      </div>\n    )\n  }\n\n  return (\n    <div>\n      <Appbar title= {title} onSearchButtonClicked = {(text) => {history.push(`/search/${text}`)}}/>\n      <div className={classes.base}>\n        {renderPlayer()}\n        {renderList()}\n      </div>\n    </div>\n  );\n}","import React, {useState, useEffect} from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport ReactPlayer from 'react-player';\nimport Appbar from '../components/Appbar';\nimport {\n  useHistory,\n  useParams\n} from \"react-router-dom\";\n\nconst useStyles = makeStyles((theme) => ({\n  base: {\n    toolbar: theme.mixins.toolbar,\n    paddingTop: theme.spacing(2)\n  },\n  root: {\n    padding: theme.spacing(2),\n    flexGrow: 1,\n  },\n  paper: {\n    paddingTop: theme.spacing(2),\n    paddingBottom: theme.spacing(2),\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n  },\n  paperSelected: {\n    backgroundColor: theme.palette.primary.main,\n    color: theme.palette.background.default\n  }\n}));\n\nexport default function SearchScreen() {\n\n  let { id } = useParams();\n  let history = useHistory();\n\n\n  const classes = useStyles();\n  const [list, setList] = useState([]);\n  const [title, setTitle] = useState(\"看戏吧\");\n\n\n  useEffect(() => {\n    if (list == null || list.length <= 0) {\n      fetch(`https://api.eyunzhu.com/api/vatfs/resource_site_collect/search?kw=${id}&per_page=50&page=1`)\n      .then(response => response.json())\n      .then(\n        (result) => {\n          console.log(result)\n          setList(result.data.data)\n        },\n        // Note: it's important to handle errors here\n        // instead of a catch() block so that we don't swallow\n        // exceptions from actual bugs in components.\n        (error) => {\n          console.log(error)\n        }\n      )\n    }\n  });\n\n  const renderList = () =>  {\n    return (\n      <div className={classes.root}>\n        <Grid container spacing={1}>\n          { list!= null ? list.map((value,index) => {\n            return (\n              <Grid key={value.vid} item xs={1}>\n                <Paper onClick={() =>  {history.push(`/details/${value.vid}`)}} variant=\"outlined\" className={`${classes.paper}`}>\n                  {value.name}\n                </Paper>\n              </Grid>\n            )\n          }): <div></div>}\n        </Grid>\n      </div>\n    )\n  }\n\n  return (\n    <div>\n      <Appbar title= {title} onSearchButtonClicked = {(text) => {history.push(`/search/${text}`)}}/>\n      <div className={classes.base}>\n        {renderList()}\n      </div>\n    </div>\n  );\n}","import React, {useState, useEffect} from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport Appbar from '../components/Appbar';\nimport {useHistory, useParams} from \"react-router-dom\";\nimport Typography from '@material-ui/core/Typography';\n\nconst useStyles = makeStyles((theme) => ({\n  base: {\n    toolbar: theme.mixins.toolbar,\n    padding: theme.spacing(2)\n  },\n  root: {\n    padding: theme.spacing(2),\n    flexGrow: 1,\n  },\n  paper: {\n    paddingTop: theme.spacing(2),\n    paddingBottom: theme.spacing(2),\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n  },\n  paperSelected: {\n    backgroundColor: theme.palette.primary.main,\n    color: theme.palette.background.default\n  }\n}));\n\nexport default function HomeScreen() {\n\n  let history = useHistory();\n\n  const classes = useStyles();\n  const [list, setList] = useState([]);\n  const [title, setTitle] = useState(\"看戏吧\");\n\n  return (\n    <div>\n      <Appbar title= {title} onSearchButtonClicked = {(text) => {history.push(`/search/${text}`)}}/>\n      <div className={classes.base}>\n          <Paper variant=\"outlined\" className={`${classes.paper}`}>\n            <Typography variant=\"h6\" >\n              {\"运用搜索开始吧！\"}\n            </Typography>\n          </Paper>          \n      </div>\n    </div>\n  );\n}","import React, { Component } from 'react';\nimport './App.css';\nimport DetailsScreen from './screens/DetailsScreen';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\nimport SearchScreen from './screens/SearchScreen';\nimport HomeScreen from './screens/HomeScreen';\n\n\nfunction App() {\n  return (\n    <Router basename={window.location.pathname || ''}>\n      <Switch>\n        <Route exact path=\"/\">\n          <HomeScreen/>\n        </Route>\n        <Route path=\"/search/:id\">\n          <SearchScreen/>\n        </Route>\n        <Route path=\"/details/:id\">\n          <DetailsScreen/>\n        </Route>\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}